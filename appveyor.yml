clone_depth: 30

image: Visual Studio 2019

environment:
  global:
    # Commit ref/tag to checkout
    BUILD_COMMIT: 0.9.0

    # Build the package locally or use the build packages from
    # conda-forge / PyPI. Unsupported!
    BUILD_LOCAL:

    PIP_DISABLE_PIP_VERSION_CHECK: 1
    # disable threaded builds on Python 3.5+ when using numpy's distutils
    # (https://github.com/numpy/numpy/issues/7607)
    BUILD_GLOBAL_OPTIONS: config --with-htmlhelp build -j1

  # Note the python version here refers to the one included in the installer
  # not the one used for building/packaging
  matrix:
    - PYTHON_VERSION: '3.6'
      PLATTAG: win_amd64
      CONDA: C:\Miniconda36-x64\Scripts\conda
      CONDA_BUILD_VERSION: '3.18.*'
      PYTHON: C:\Miniconda36-x64\python
      # CONDA_SPEC_FILE: installer\windows\specs\conda-spec.txt

matrix:
  fast_finish: true

cache:
  - '%LOCALAPPDATA%\pip\Cache -> appveyor.yml'
  - '.cache -> appveyor.yml'

build_script:
  - set "PATH_BEFORE_BUILD=%PATH%"
  - set "PATH=C:\msys64\usr\bin;C:\Program Files (x86)\NSIS;%PATH%"

  - if not "%CONDA%" == "" ( rmdir /q /s "C:\Program Files (x86)\Windows Kits\10\include\wdf" )
  - if not "%CONDA%" == "" ( ci\appveyor-conda-build.bat )
  - if "%CONDA%" == "" ( ci\appveyor-build.bat )

  - for %%s in ( dist/Quasar*.exe ) do ( set "INSTALLER=%%s" )
  - echo INSTALLER = %INSTALLER%

  - set "PATH=%PATH_BEFORE_BUILD%"

test_script:
  # cleanup registry of anaconda reg keys
  - reg delete HKEY_LOCAL_MACHINE\Software\Python\ContinuumAnalytics /f || cd .
  - reg delete HKEY_CURRENT_USER\Software\Python\ContinuumAnalytics /f || cd .
  - dir dist
  # Install in silent mode. Output has to be piped somewhere so the installer
  # runs 'attached' to the console.
  - dist\%INSTALLER% /S /D=C:\test-install > nul
  # The venv and conda envs create different install layouts.
  - if "%CONDA%" == "" ( set "PYTHON=C:\test-install\Scripts\python" )
  - if not "%CONDA%" == "" ( set "PYTHON=C:\test-install\python" )
  - >-
    "%PYTHON%" --version
  - >-
    "%PYTHON%" -m pip --version
  - >-
    "%PYTHON%" -m pip list --format=freeze
  # Test that orange and all dependencies are installed in a consistent state
  - >-
    "%PYTHON%" -m pip install --no-index --no-cache-dir orange3

  # Run test suite in the installed environment.
  - set ORANGE_DEPRECATIONS_ERROR=1
  - set PYTHONWARNINGS=module

  # Remove failing test due some Ornage/spectroscopy conflick
  - del "C:\test-install\lib\site-packages\Orange\widgets\data\tests\test_owsave.py"

  - >-
    "%PYTHON%" -m unittest -v Orange.tests Orange.widgets.tests || cd .
  - >-
    "%PYTHON%" -m unittest -v orangecontrib.spectroscopy.tests || cd .
  - >-
    "%PYTHON%" -m quasar --help
  - >-
    "%PYTHON%" -c "import opusFC"
  - mkdir installers
  - move dist\%INSTALLER% installers\

  # Log the filename and the sha checksum
  - for /f %%s in ( 'sha256sum -b installers/%INSTALLER%' ) do ( set "CHECKSUM=%%s" )
  - echo INSTALLER = %INSTALLER%
  - echo SHA256    = %CHECKSUM%


artifacts:
  - path: installers\*
  - path: conda-pkgs\*
